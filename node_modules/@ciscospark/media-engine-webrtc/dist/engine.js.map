{"version":3,"sources":["engine.js"],"names":["DirectionContainer","targetMediaDirection","capitalize","audio","video","getTargetMediaDirection","target","kind","get","WebRTCMediaEngine","pc","constraints","finalConstraints","fake","process","env","NODE_ENV","navigator","mediaDevices","getUserMedia","attrs","options","logger","console","RTCPeerConnection","iceServers","bandwidthLimit","audioBandwidthLimit","videoBandwidthLimit","parent","nextTick","onnegotiationneeded","answerSdp","info","triggerNegotiationNeeded","ontrack","event","trigger","stream","remoteMediaStream","MediaStream","streams","getTracks","forEach","track","addTrack","onended","removeTrack","undefined","includes","err","needsIce","iceGatheringState","sdp","localDescription","audioDirection","media","find","m","type","videoDirection","icePromise","resolve","onicecandidate","candidate","td","wantsVideo","_prepareIceGatherer","gumming","_getUserMedia","then","offerOptions","offerToReceiveAudio","getReceivers","r","offerToReceiveVideo","createOffer","offer","setLocalDescription","offerSdp","setRemoteDescription","RTCSessionDescription","sendingAudio","sendingVideo","direction","constraint","_setNewMediaConstraint","localMediaStream","filter","t","id","getSenders","s","readyState","warn","stop","addOrReplaceTrack","trackOrConstraint","Error","MediaStreamTrack","_setNewMediaTrack","_setNewMediaDirection","shouldRecv","set","unpauseReceivingMedia","pauseReceivingMedia","getAudioTracks","length","getVideoTracks","catch","reject","existing","senders","enabled","tracks","signalingState","close","ended","off","prototype"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AACA;;;;AAEA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA,IAAMA,qBAAqB,mDAA3B;AACA,IAAMC,uBAAuB,IAAID,kBAAJ,EAA7B;;AAEA,IAAME,aAAa;AACjBC,SAAO,OADU;AAEjBC,SAAO;AAFU,CAAnB;;AAKA;;;;;;;;AAQA,SAASC,uBAAT,CAAiCC,MAAjC,EAAyCC,IAAzC,EAA+C;AAC7C,SAAON,qBAAqBO,GAArB,CAAyBF,MAAzB,EAAiCC,IAAjC,KAA0C,UAAjD;AACD;;AAED;;;;IAIqBE,iB,WA0blB,2BAAc,SAAd,C,UA0MA,gCAAS,GAAT,C;;;;;AAvjBD;;;;wBAIqB;AACnB,aAAO,gDAA4B,OAA5B,EAAqC,KAAKC,EAA1C,CAAP;AACD;;AAED;;;;;;;wBAIqB;AACnB,aAAO,gDAA4B,OAA5B,EAAqC,KAAKA,EAA1C,CAAP;AACD;;AAED;;;;;;;;;;;AA5FA;;;;;;iCAMoBC,W,EAAa;AAC/B,UAAMC,mBAAmB,wBAAS,EAAT,EAAaD,WAAb,EAA0B,EAACE,MAAMC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,MAAhC,EAA1B,CAAzB;AACA,aAAOC,UAAUC,YAAV,CAAuBC,YAAvB,CAAoCP,gBAApC,CAAP;AACD;AAKD;;;;;;AAQA;;;;;;AAQA;;;;;;AAMA;;;;;AAOA;;;;;AAOA;;;;;;;AAiDA,+BAAsC;AAAA;;AAAA,QAA1BQ,KAA0B,uEAAlB,EAAkB;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AAAA;AAAA,SAxFtCC,MAwFsC,GAxF7BC,OAwF6B;;AAAA;;AAAA;;AAAA;;AAAA,SA3DtCb,EA2DsC,GA3DjC,IAAIc,iBAAJ,CAAsB,EAACC,YAAY,EAAb,EAAtB,CA2DiC;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,SA5BtCC,cA4BsC,GA5BrB;AACfC,2BAAqB,KADN;AAEfC,2BAAqB;AAFN,KA4BqB;;AAAA;;AAAA;;AAAA;;AACpC,QAAIP,QAAQQ,MAAZ,EAAoB;AAClB;AACAf,cAAQgB,QAAR,CAAiB,YAAM;AACrB,YAAIT,QAAQQ,MAAR,CAAeP,MAAnB,EAA2B;AACzB,gBAAKA,MAAL,GAAcD,QAAQQ,MAAR,CAAeP,MAA7B;AACD;AACF,OAJD;AAKD,KAPD,MAQK,IAAIF,MAAME,MAAV,EAAkB;AACrB,WAAKA,MAAL,GAAcF,MAAME,MAApB;AACD;;AAED,SAAKZ,EAAL,CAAQqB,mBAAR,GAA8B,YAAM;AAClC,UAAI,MAAKC,SAAT,EAAoB;AAClB,cAAKV,MAAL,CAAYW,IAAZ,CAAiB,2CAAjB;AACA,cAAKC,wBAAL;AACD;AACF,KALD;;AAOA;AACA;AACA,SAAKxB,EAAL,CAAQyB,OAAR,GAAkB,UAACC,KAAD,EAAW;AAC3B,YAAKC,OAAL,CAAa,OAAb;AACA,UAAMC,SAAS,MAAKC,iBAAL,IAA0B,IAAIC,WAAJ,EAAzC;AACAJ,YAAMK,OAAN,CAAc,CAAd,EACGC,SADH,GAEGC,OAFH,CAEW,UAACC,KAAD,EAAW;AAClBN,eAAOO,QAAP,CAAgBD,KAAhB;AACAA,cAAME,OAAN,GAAgB,YAAM;AACpBR,iBAAOS,WAAP,CAAmBH,KAAnB;AACAA,gBAAME,OAAN,GAAgBE,SAAhB;AACA,cAAI;AACF,gCAAiB9C,WAAW0C,MAAMrC,IAAjB,CAAjB,IAA6C,gDAA4BqC,MAAMrC,IAAlC,EAAwC,MAAKG,EAA7C,EAAiDuC,QAAjD,CAA0D,MAA1D,CAA7C;AACD,WAFD,CAGA,OAAOC,GAAP,EAAY;AACV,gCAAiBhD,WAAW0C,MAAMrC,IAAjB,CAAjB,IAA6C,KAA7C;AACD;AACF,SATD;;AAWA,4BAAiBL,WAAW0C,MAAMrC,IAAjB,CAAjB,IAA6C,gDAA4BqC,MAAMrC,IAAlC,EAAwC,MAAKG,EAA7C,EAAiDuC,QAAjD,CAA0D,MAA1D,CAA7C;AACD,OAhBH;AAiBA,YAAKV,iBAAL,GAAyBD,MAAzB;AACA,YAAKD,OAAL,CAAa,qBAAb;AACD,KAtBD;AAuBD;;AAED;AACA;;;;;;;;;0CAKsB;AAAA;;AACpB,UAAIc,WAAW,KAAf;AACA,UAAI,KAAKzC,EAAL,CAAQ0C,iBAAR,KAA8B,KAAlC,EAAyC;AACvC,aAAK9B,MAAL,CAAYW,IAAZ,CAAiB,6EAAjB;AACAkB,mBAAW,IAAX;AACD,OAHD,MAIK;AACH,YAAME,MAAM,yBAAM,KAAK3C,EAAL,CAAQ4C,gBAAR,CAAyBD,GAA/B,CAAZ;AACA,YAAI,KAAKE,cAAL,KAAwB,UAAxB,IAAsClD,wBAAwB,IAAxB,EAA8B,OAA9B,MAA2C,KAAKkD,cAAhD,IAAkElD,wBAAwB,IAAxB,EAA8B,OAA9B,MAA2C,UAAvJ,EAAmK;AACjK,cAAMF,QAAQkD,IAAIG,KAAJ,CAAUC,IAAV,CAAe,UAACC,CAAD;AAAA,mBAAOA,EAAEC,IAAF,KAAW,OAAlB;AAAA,WAAf,CAAd;AACA,cAAIxD,KAAJ,EAAW;AACT,iBAAKmB,MAAL,CAAYW,IAAZ,CAAiB,mCAAjB;AACD,WAFD,MAGK;AACH,iBAAKX,MAAL,CAAYW,IAAZ,CAAiB,4CAAjB;AACAkB,uBAAW,IAAX;AACD;AACF;;AAED,YAAI,KAAKS,cAAL,KAAwB,UAAxB,IAAsCvD,wBAAwB,IAAxB,EAA8B,OAA9B,MAA2C,KAAKuD,cAAhD,IAAkEvD,wBAAwB,IAAxB,EAA8B,OAA9B,MAA2C,UAAvJ,EAAmK;AACjK,cAAMD,QAAQiD,IAAIG,KAAJ,CAAUC,IAAV,CAAe,UAACC,CAAD;AAAA,mBAAOA,EAAEC,IAAF,KAAW,OAAlB;AAAA,WAAf,CAAd;AACA,cAAIvD,KAAJ,EAAW;AACT,iBAAKkB,MAAL,CAAYW,IAAZ,CAAiB,mCAAjB;AACD,WAFD,MAGK;AACH,iBAAKX,MAAL,CAAYW,IAAZ,CAAiB,4CAAjB;AACAkB,uBAAW,IAAX;AACD;AACF;AACF;;AAED,UAAIU,mBAAJ;AACA,UAAIV,QAAJ,EAAc;AACZU,qBAAa,sBAAY,UAACC,OAAD,EAAa;AACpC,iBAAKxC,MAAL,CAAYW,IAAZ,CAAiB,2BAAjB;AACA,iBAAKvB,EAAL,CAAQqD,cAAR,GAAyB,UAAC3B,KAAD,EAAW;AAClC,gBAAI,CAACA,MAAM4B,SAAX,EAAsB;AACpB,qBAAK1C,MAAL,CAAYW,IAAZ,CAAiB,wBAAjB;AACA,qBAAKvB,EAAL,CAAQqD,cAAR,GAAyBf,SAAzB;AACAc;AACA;AACD;;AAED,mBAAKxC,MAAL,CAAYW,IAAZ,CAAiB,mBAAjB;AACD,WATD;AAUD,SAZY,CAAb;AAaD;;AAED,aAAO4B,UAAP;AACD;;AAED;;AAEA;;;;;;;kCAIc;AAAA;;AACZ,WAAKvC,MAAL,CAAYW,IAAZ,CAAiB,uBAAjB;;AAEA,UAAMgC,KAAK5D,wBAAwB,IAAxB,EAA8B,OAA9B,CAAX;AACA,UAAM6D,aAAaD,GAAGhB,QAAH,CAAY,MAAZ,KAAuBgB,GAAGhB,QAAH,CAAY,MAAZ,CAA1C;;AAEA,UAAMY,aAAa,KAAKM,mBAAL,EAAnB;;AAEA,aAAO,sBAAY,UAACL,OAAD,EAAa;AAC9B,YAAI,OAAKM,OAAT,EAAkB;AAChB,iBAAK9C,MAAL,CAAYW,IAAZ,CAAiB,2CAAjB;AACA;AACA;AACA;AACA6B,kBAAQ,OAAKO,aAAL,EAAR;AACA;AACD;;AAEDP;AACD,OAXM,EAYJQ,IAZI,CAYC,iBAAI;AAAA,eAAM,OAAKhD,MAAL,CAAYW,IAAZ,CAAiB,gBAAjB,EAAmC,OAAKsC,YAAxC,CAAN;AAAA,OAAJ,CAZD,EAaJD,IAbI,CAaC,YAAM;AACV;AACA;AACA;AACA;AACA,eAAKC,YAAL,CAAkBC,mBAAlB,GAAwC,OAAKD,YAAL,CAAkBC,mBAAlB,IAAyC,CAAC,CAAC,OAAK9D,EAAL,CAAQ+D,YAAR,GAAuBhB,IAAvB,CAA4B,UAACiB,CAAD;AAAA,iBAAOA,EAAE9B,KAAF,CAAQrC,IAAR,KAAiB,OAAxB;AAAA,SAA5B,CAAnF;AACA,eAAKgE,YAAL,CAAkBI,mBAAlB,GAAwC,OAAKJ,YAAL,CAAkBI,mBAAlB,IAAyC,CAAC,CAAC,OAAKjE,EAAL,CAAQ+D,YAAR,GAAuBhB,IAAvB,CAA4B,UAACiB,CAAD;AAAA,iBAAOA,EAAE9B,KAAF,CAAQrC,IAAR,KAAiB,OAAxB;AAAA,SAA5B,CAAnF;AACA,eAAO,OAAKG,EAAL,CAAQkE,WAAR,CAAoB,OAAKL,YAAzB,CAAP;AACD,OArBI,EAsBJD,IAtBI,CAsBC,iBAAI,UAACO,KAAD,EAAW;AACnBA,cAAMxB,GAAN,GAAY,kCAAc,OAAK3B,cAAnB,EAAmCmD,MAAMxB,GAAzC,CAAZ;AACD,OAFK,CAtBD,EAyBJiB,IAzBI,CAyBC,iBAAI;AAAA,eAAM,OAAKhD,MAAL,CAAYW,IAAZ,CAAiB,2BAAjB,CAAN;AAAA,OAAJ,CAzBD,EA0BJqC,IA1BI,CA0BC,UAACO,KAAD;AAAA,eAAW,OAAKnE,EAAL,CAAQoE,mBAAR,CAA4BD,KAA5B,CAAX;AAAA,OA1BD,EA2BJP,IA3BI,CA2BC,iBAAI;AAAA,eAAMT,cAAc,OAAKvC,MAAL,CAAYW,IAAZ,CAAiB,4BAAjB,CAApB;AAAA,OAAJ,CA3BD,EA4BJqC,IA5BI,CA4BC;AAAA,eAAMT,UAAN;AAAA,OA5BD,EA6BJS,IA7BI,CA6BC,iBAAI;AAAA,eAAM,OAAKhD,MAAL,CAAYW,IAAZ,CAAiB,mBAAjB,CAAN;AAAA,OAAJ,CA7BD,EA8BJqC,IA9BI,CA8BC;AAAA,eAAM,kCAAc,OAAK5C,cAAnB,EAAmC,OAAKhB,EAAL,CAAQ4C,gBAAR,CAAyBD,GAA5D,CAAN;AAAA,OA9BD,EA+BJiB,IA/BI,CA+BC,iBAAI;AAAA,eAAMJ,cAAc,OAAK5C,MAAL,CAAYW,IAAZ,CAAiB,uBAAjB,CAApB;AAAA,OAAJ,CA/BD,EAgCJqC,IAhCI,CAgCC,+BAAWJ,UAAX,CAhCD,EAiCJI,IAjCI,CAiCC,iBAAI,UAACjB,GAAD,EAAS;AACjB,eAAK0B,QAAL,GAAgB1B,GAAhB;AACD,OAFK,CAjCD,CAAP;AAoCD;;AAED;;;;;;;;iCAKaA,G,EAAK;AAAA;;AAChB,WAAK/B,MAAL,CAAYW,IAAZ,CAAiB,kBAAjB;AACA,aAAO,KAAKvB,EAAL,CAAQsE,oBAAR,CAA6B,IAAIC,qBAAJ,CAA0B;AAC5D5B,gBAD4D;AAE5DM,cAAM;AAFsD,OAA1B,CAA7B,EAIJW,IAJI,CAIC,YAAM;AACV,eAAKhD,MAAL,CAAYW,IAAZ,CAAiB,iBAAjB;AACA,eAAKD,SAAL,GAAiBqB,GAAjB;AACA,eAAK6B,YAAL,GAAoB,gDAA4B,OAA5B,EAAqC,OAAKxE,EAA1C,EAA8CuC,QAA9C,CAAuD,MAAvD,CAApB;AACA,eAAKkC,YAAL,GAAoB,gDAA4B,OAA5B,EAAqC,OAAKzE,EAA1C,EAA8CuC,QAA9C,CAAuD,MAAvD,CAApB;AACA,eAAKZ,OAAL,CAAa,gBAAb;AACD,OAVI,CAAP;AAWD;AAGD;;;;;;;AASA;;;;;;;AAUA;;;;;;;;;;;AAQA;;;;;;;;0CAQsB9B,I,EAAM6E,S,EAAW;AAAA;;AACrC,WAAK9D,MAAL,CAAYW,IAAZ,cAA4B1B,IAA5B,sBAAiD6E,SAAjD;AACA,UAAMC,aAAaD,UAAUnC,QAAV,CAAmB,MAAnB,CAAnB;AACA,WAAKtC,WAAL,CAAiBJ,IAAjB,IAAyB8E,UAAzB;;AAEA,UAAIA,UAAJ,EAAgB;AACd,YAAI,CAAC,KAAQ9E,IAAR,gBAAyB0C,QAAzB,CAAkC,MAAlC,CAAL,EAAgD;AAC9C,eAAKqC,sBAAL,CAA4B/E,IAA5B,EAAkC8E,UAAlC;AACD;AACF,OAJD,MAKK;AACH,aAAK/D,MAAL,CAAYW,IAAZ,oCAAkD1B,IAAlD;AACA,YAAI,CAAC,KAAKgF,gBAAV,EAA4B;AAC1B;AACD;AACD,aAAKA,gBAAL,CACG7C,SADH,GAEG8C,MAFH,CAEU,UAACC,CAAD;AAAA,iBAAOA,EAAElF,IAAF,KAAWA,IAAlB;AAAA,SAFV,EAGGoC,OAHH,CAGW,UAAC8C,CAAD,EAAO;AACd,iBAAKnE,MAAL,CAAYW,IAAZ,eAA6B1B,IAA7B,eAA2CkF,EAAEC,EAA7C;AACA,iBAAKH,gBAAL,CAAsBxC,WAAtB,CAAkC0C,CAAlC;AACA,iBAAKnE,MAAL,CAAYW,IAAZ,eAA6B1B,IAA7B,eAA2CkF,EAAEC,EAA7C;AACA;AACA;AACA,cAAI;AACF,mBAAKhF,EAAL,CAAQqC,WAAR,CAAoB,OAAKrC,EAAL,CAAQiF,UAAR,GAAqBlC,IAArB,CAA0B,UAACmC,CAAD;AAAA,qBAAOA,EAAEhD,KAAF,KAAY6C,CAAnB;AAAA,aAA1B,CAApB;AACD,WAFD,CAGA,OAAOvC,GAAP,EAAY;AACV,gBAAIuC,EAAEI,UAAF,KAAiB,OAArB,EAA8B;AAC5B,qBAAKvE,MAAL,CAAYwE,IAAZ,CAAiB,oFAAjB;AACD,aAFD,MAGK;AACH,qBAAKxE,MAAL,CAAYwE,IAAZ,CAAiB,+HAAjB;AACD;AACD,mBAAKxE,MAAL,CAAYwE,IAAZ,CAAiB5C,GAAjB;AACD;AACD,iBAAK5B,MAAL,CAAYW,IAAZ,uBAAqC/B,WAAWK,IAAX,CAArC;AACA,6BAAeL,WAAWK,IAAX,CAAf,IAAqC,KAArC;AACA,iBAAKe,MAAL,CAAYW,IAAZ,eAA6B1B,IAA7B,eAA2CkF,EAAEC,EAA7C;AACAD,YAAEM,IAAF;AACD,SAzBH;AA0BD;AACF;;AAED;;;;;;;;;sCAMkBxF,I,EAAMqC,K,EAAO;AAC7B,WAAKtB,MAAL,CAAYW,IAAZ,kBAAgC1B,IAAhC;AACA,WAAKI,WAAL,CAAiBJ,IAAjB,IAAyB,KAAzB;AACA,WAAKyF,iBAAL,CAAuBpD,KAAvB;AACD;;AAED;;;;;;;;;2CAMuBrC,I,EAAM8E,U,EAAY;AACvC,WAAK/D,MAAL,CAAYW,IAAZ,cAA4B1B,IAA5B;AACA,WAAKI,WAAL,CAAiBJ,IAAjB,IAAyB8E,UAAzB;AACA,WAAKhB,aAAL;AACD;;AAED;AACA;AACA;AACA;;;;;;;;;;;6BAQS9D,I,EAAM6E,S,EAAWa,iB,EAAmB;AAC3C,UAAIA,iBAAJ,EAAuB;AACrB,YAAI,CAACb,UAAUnC,QAAV,CAAmB,MAAnB,CAAL,EAAiC;AAC/B,gBAAM,IAAIiD,KAAJ,qBAA4B3F,IAA5B,6DAAN;AACD;;AAED,YAAI0F,6BAA6BE,gBAAjC,EAAmD;AACjD,cAAIF,kBAAkB1F,IAAlB,KAA2BA,IAA/B,EAAqC;AACnC,kBAAM,IAAI2F,KAAJ,2BAAkC3F,IAAlC,yBAAN;AACD;;AAED,eAAK6F,iBAAL,CAAuB7F,IAAvB,EAA6B0F,iBAA7B;AACD,SAND,MAOK;AACH,eAAKX,sBAAL,CAA4B/E,IAA5B,EAAkC0F,iBAAlC;AACD;AACF,OAfD,MAgBK;AACH,YAAIb,cAAc/E,wBAAwB,IAAxB,EAA8BE,IAA9B,CAAlB,EAAuD;AACrD,eAAKe,MAAL,CAAYW,IAAZ,CAAoB1B,IAApB,kCAAqD6E,SAArD;AACA;AACD;;AAED,YAAIA,cAAc,KAAQ7E,IAAR,eAAlB,EAA4C;AAC1C,eAAKe,MAAL,CAAYW,IAAZ,CAAoB1B,IAApB,wBAA2C6E,SAA3C;AACA;AACD;AACD,aAAKiB,qBAAL,CAA2B9F,IAA3B,EAAiC6E,SAAjC;AACD;;AAED,UAAMkB,aAAalB,UAAUnC,QAAV,CAAmB,MAAnB,CAAnB;;AAEAhD,2BAAqBsG,GAArB,CAAyB,IAAzB,EAA+BhG,IAA/B,EAAqC6E,SAArC;;AAEA,WAAKb,YAAL,oBAAmC,2CAAuBhE,IAAvB,CAAnC,IAAqE+F,UAArE;;AAEA,UAAIA,UAAJ,EAAgB;AACd,YAAI,KAAK/D,iBAAL,IAA0B,KAAKA,iBAAL,CAAuBG,SAAvB,GAAmCe,IAAnC,CAAwC,UAACgC,CAAD;AAAA,iBAAOA,EAAElF,IAAF,KAAWA,IAAlB;AAAA,SAAxC,CAA9B,EAA+F;AAC7F,eAAKiG,qBAAL,CAA2BjG,IAA3B;AACD,SAFD,MAGK,IAAI,KAAKyB,SAAT,EAAoB;AACvB,eAAKE,wBAAL;AACD;AACF,OAPD,MAQK,IAAI,KAAKK,iBAAL,IAA0B,KAAKA,iBAAL,CAAuBG,SAAvB,GAAmCe,IAAnC,CAAwC,UAACgC,CAAD;AAAA,eAAOA,EAAElF,IAAF,KAAWA,IAAlB;AAAA,OAAxC,CAA9B,EAA+F;AAClG,aAAKkG,mBAAL,CAAyBlG,IAAzB;AACD;AACF;;AAED;;;;;AAIA;;;;;;AAMA;AACA;oCACgB;AAAA;;AACd,WAAKe,MAAL,CAAYW,IAAZ,CAAiB,oCAAjB;AACA,aAAO,sBAAY,UAAC6B,OAAD;AAAA,eAAahD,QAAQgB,QAAR,CAAiBgC,OAAjB,CAAb;AAAA,OAAZ,EACJQ,IADI,CACC,YAAM;AACV,YAAI,OAAK3D,WAAL,CAAiBR,KAAjB,KAA2B,IAA3B,IAAmC,OAAKO,EAAL,CAAQiF,UAAR,GAAqBlC,IAArB,CAA0B,UAACmC,CAAD;AAAA,iBAAOA,EAAEhD,KAAF,CAAQrC,IAAR,KAAiB,OAAxB;AAAA,SAA1B,CAAvC,EAAmG;AACjG,iBAAKe,MAAL,CAAYW,IAAZ,CAAiB,wEAAjB;AACA,wCAAuB,OAAKtB,WAA5B,EAAyC,OAAzC;AACD;;AAED,YAAI,OAAKA,WAAL,CAAiBP,KAAjB,KAA2B,IAA3B,IAAmC,OAAKM,EAAL,CAAQiF,UAAR,GAAqBlC,IAArB,CAA0B,UAACmC,CAAD;AAAA,iBAAOA,EAAEhD,KAAF,CAAQrC,IAAR,KAAiB,OAAxB;AAAA,SAA1B,CAAvC,EAAmG;AACjG,iBAAKe,MAAL,CAAYW,IAAZ,CAAiB,wEAAjB;AACA,wCAAuB,OAAKtB,WAA5B,EAAyC,OAAzC;AACD;;AAED,eAAOF,kBAAkBU,YAAlB,CAA+B,OAAKR,WAApC,CAAP;AACD,OAbI,EAcJ2D,IAdI,CAcC,UAAChC,MAAD,EAAY;AAChB,eAAKhB,MAAL,CAAYW,IAAZ,kCAAgDK,OAAOoE,cAAP,GAAwBC,MAAxE,0BAAmGrE,OAAOsE,cAAP,GAAwBD,MAA3H;AACArE,eAAOI,SAAP,GAAmBC,OAAnB,CAA2B,UAAC8C,CAAD;AAAA,iBAAO,OAAKO,iBAAL,CAAuBP,CAAvB,CAAP;AAAA,SAA3B;AACA,eAAK9E,WAAL,GAAmB,EAAnB;AACD,OAlBI,EAmBJkG,KAnBI,CAmBE,UAAC3D,GAAD,EAAS;AACd,eAAKb,OAAL,CAAa,OAAb,EAAsBa,GAAtB;AACA,eAAO,kBAAQ4D,MAAR,CAAe5D,GAAf,CAAP;AACD,OAtBI,CAAP;AAuBD;;AAED;;;;;;;;;sCAMkBN,K,EAAO;AACvB,UAAI,CAAC,KAAK2C,gBAAV,EAA4B;AAC1B,aAAKA,gBAAL,GAAwB,IAAI/C,WAAJ,EAAxB;AACD;AACD,WAAKlB,MAAL,CAAYW,IAAZ,uBAAqCW,MAAMrC,IAA3C;AACA,UAAMwG,WAAW,KAAKrG,EAAL,CAAQiF,UAAR,GAAqBlC,IAArB,CAA0B,UAACmC,CAAD;AAAA,eAAOA,EAAEhD,KAAF,CAAQrC,IAAR,KAAiBqC,MAAMrC,IAAvB,IAA+BqF,EAAEhD,KAAF,KAAYA,KAAlD;AAAA,OAA1B,CAAjB;AACA,UAAImE,QAAJ,EAAc;AACZ,aAAKzF,MAAL,CAAYW,IAAZ,wBAAsCW,MAAMrC,IAA5C;AACA,aAAKG,EAAL,CAAQqC,WAAR,CAAoBgE,QAApB;AACA,aAAKxB,gBAAL,CAAsBxC,WAAtB,CAAkCgE,SAASnE,KAA3C;AACA;AACA;AACA;AACAA,cAAMmD,IAAN;AACD;;AAED,WAAKzE,MAAL,CAAYW,IAAZ,aAA2BW,MAAMrC,IAAjC;AACA,WAAKgF,gBAAL,CAAsB1C,QAAtB,CAA+BD,KAA/B;AACA,WAAKtB,MAAL,CAAYW,IAAZ,aAA2BW,MAAMrC,IAAjC;AACA,WAAKG,EAAL,CAAQmC,QAAR,CAAiBD,KAAjB,EAAwB,KAAK2C,gBAA7B;;AAEA,WAAKjE,MAAL,CAAYW,IAAZ,qBAAmC/B,WAAW0C,MAAMrC,IAAjB,CAAnC;AACA,uBAAeL,WAAW0C,MAAMrC,IAAjB,CAAf,IAA2C,IAA3C;AACD;;AAED;;;;;;;;;;sCAOkBA,I,EAAM;AAAA;;AACtB,UAAI,CAACA,IAAL,EAAW;AACT,cAAM,IAAI2F,KAAJ,CAAU,kBAAV,CAAN;AACD;AACD,UAAMc,UAAU,KAAKtG,EAAL,CACbiF,UADa,GAEbH,MAFa,CAEN,UAACI,CAAD;AAAA,eAAOA,EAAEhD,KAAF,CAAQrC,IAAR,KAAiBA,IAAxB;AAAA,OAFM,CAAhB;;AAIA,UAAIyG,QAAQL,MAAR,KAAmB,CAAvB,EAA0B;AACxB,cAAM,IAAIT,KAAJ,SAAgB3F,IAAhB,6BAAN;AACD;;AAEDyG,cAAQrE,OAAR,CAAgB,UAACiD,CAAD,EAAO;AACrB,eAAKtE,MAAL,CAAYW,IAAZ,cAA4B1B,IAA5B;AACAqF,UAAEhD,KAAF,CAAQqE,OAAR,GAAkB,KAAlB;AACD,OAHD;;AAKA,WAAK3F,MAAL,CAAYW,IAAZ,qBAAmC/B,WAAWK,IAAX,CAAnC;AACA,uBAAeL,WAAWK,IAAX,CAAf,IAAqC,KAArC;AACD;;AAED;;;;;;;;;wCAMoBA,I,EAAM;AAAA;;AACxB,UAAI,CAACA,IAAL,EAAW;AACT,cAAM,IAAI2F,KAAJ,CAAU,kBAAV,CAAN;AACD;AACD,UAAMc,UAAU,KAAKtG,EAAL,CACbiF,UADa,GAEbH,MAFa,CAEN,UAACI,CAAD;AAAA,eAAOA,EAAEhD,KAAF,CAAQrC,IAAR,KAAiBA,IAAxB;AAAA,OAFM,CAAhB;;AAIA,UAAIyG,QAAQL,MAAR,KAAmB,CAAvB,EAA0B;AACxB,cAAM,IAAIT,KAAJ,SAAgB3F,IAAhB,+BAAN;AACD;;AAEDyG,cAAQrE,OAAR,CAAgB,UAACiD,CAAD,EAAO;AACrB,eAAKtE,MAAL,CAAYW,IAAZ,gBAA8B1B,IAA9B;AACAqF,UAAEhD,KAAF,CAAQqE,OAAR,GAAkB,IAAlB;AACD,OAHD;;AAKA,WAAK3F,MAAL,CAAYW,IAAZ,qBAAmC/B,WAAWK,IAAX,CAAnC;AACA,uBAAeL,WAAWK,IAAX,CAAf,IAAqC,IAArC;AACD;;AAED;;;;;;;;;wCAMoBA,I,EAAM;AAAA;;AACxB,UAAI,CAACA,IAAL,EAAW;AACT,cAAM,IAAI2F,KAAJ,CAAU,kBAAV,CAAN;AACD;AACD,UAAI,CAAC,KAAK3D,iBAAV,EAA6B;AAC3B,cAAM,IAAI2D,KAAJ,CAAU,kCAAV,CAAN;AACD;AACD,UAAMgB,SAAS,KAAK3E,iBAAL,CACZG,SADY,GAEZ8C,MAFY,CAEL,UAACC,CAAD;AAAA,eAAOA,EAAElF,IAAF,KAAWA,IAAlB;AAAA,OAFK,CAAf;;AAIA,UAAI2G,OAAOP,MAAP,KAAkB,CAAtB,EAAyB;AACvB,cAAM,IAAIT,KAAJ,gBAAuB3F,IAAvB,4BAAN;AACD;;AAGD2G,aAAOvE,OAAP,CAAe,UAAC8C,CAAD,EAAO;AACpB,eAAKnE,MAAL,CAAYW,IAAZ,qBAAmC1B,IAAnC;AACAkF,UAAEwB,OAAF,GAAY,KAAZ;AACD,OAHD;;AAKA,WAAK3F,MAAL,CAAYW,IAAZ,uBAAqC/B,WAAWK,IAAX,CAArC;AACA,yBAAiBL,WAAWK,IAAX,CAAjB,IAAuC,KAAvC;AACD;;AAED;;;;;;;;;0CAMsBA,I,EAAM;AAAA;;AAC1B,UAAI,CAACA,IAAL,EAAW;AACT,cAAM,IAAI2F,KAAJ,CAAU,kBAAV,CAAN;AACD;AACD,UAAI,CAAC,KAAK3D,iBAAV,EAA6B;AAC3B,cAAM,IAAI2D,KAAJ,CAAU,kCAAV,CAAN;AACD;AACD,UAAMgB,SAAS,KAAK3E,iBAAL,CACZG,SADY,GAEZ8C,MAFY,CAEL,UAACC,CAAD;AAAA,eAAOA,EAAElF,IAAF,KAAWA,IAAlB;AAAA,OAFK,CAAf;;AAIA,UAAI2G,OAAOP,MAAP,KAAkB,CAAtB,EAAyB;AACvB,cAAM,IAAIT,KAAJ,gBAAuB3F,IAAvB,4BAAN;AACD;;AAED2G,aAAOvE,OAAP,CAAe,UAAC8C,CAAD,EAAO;AACpB,gBAAKnE,MAAL,CAAYW,IAAZ,uBAAqC1B,IAArC;AACAkF,UAAEwB,OAAF,GAAY,IAAZ;AACD,OAHD;;AAKA,WAAK3F,MAAL,CAAYW,IAAZ,uBAAqC/B,WAAWK,IAAX,CAArC,sBAAsE,mBAAiBL,WAAWK,IAAX,CAAjB,CAAtE;AACA,yBAAiBL,WAAWK,IAAX,CAAjB,IAAuC,IAAvC;AACD;;AAED;;;;;;;;2BAKO;AACL,UAAI,KAAKG,EAAL,CAAQyG,cAAR,KAA2B,QAA/B,EAAyC;AACvC,aAAKzG,EAAL,CAAQiF,UAAR,GAAqBhD,OAArB,CAA6B,UAACiD,CAAD;AAAA,iBAAOA,EAAEhD,KAAF,CAAQmD,IAAR,EAAP;AAAA,SAA7B;AACA,aAAKrF,EAAL,CAAQ0G,KAAR;AACD;;AAED,WAAK1G,EAAL,CAAQqB,mBAAR,GAA8BiB,SAA9B;AACA,WAAKtC,EAAL,CAAQyB,OAAR,GAAkBa,SAAlB;AACA,WAAKtC,EAAL,CAAQqD,cAAR,GAAyBf,SAAzB;AACA,WAAKqE,KAAL,GAAa,IAAb;AACA,WAAKC,GAAL;AACD;;;;AAGD;;;;;AAKA;AACA;+CAC2B;AACzB,WAAKjF,OAAL,CAAa,mBAAb;AACD;;AAED;;;;;;;gCAIY;AACV,aAAO,mBAAP;AACD;;;;;;;;;;;;;;;WAtmBU,E;;;;;WAOC,E;;;;;WAGG,K;;;;;WAGA,K;;;;;WAGE,K;;;;;WAGA,K;;;;;WAGT,K;;;;;WAqNM,E;;;;;WASC,E;;;;;WAUL,K;;;kBA9SS5B,iB;;;AAypBrB,sBAAcA,kBAAkB8G,SAAhC","file":"engine.js","sourcesContent":["import {debounce} from 'lodash-decorators';\nimport {nonenumerable} from 'core-decorators';\nimport {make as makeTemplateContainer, oneFlight, tap, whileInFlight} from '@ciscospark/common';\nimport evented from '@ciscospark/common-evented';\nimport Events from 'ampersand-events';\nimport {defaults} from 'lodash';\nimport {parse} from 'sdp-transform';\nimport {\n  ensureH264,\n  limitBandwith,\n  getMediaDirectionFromTracks,\n  kindToPropertyFragment\n} from './webrtc-helpers';\n\nconst DirectionContainer = makeTemplateContainer(WeakMap, Map);\nconst targetMediaDirection = new DirectionContainer();\n\nconst capitalize = {\n  audio: 'Audio',\n  video: 'Video'\n};\n\n/**\n * Wrapper around targetMediaDirection.get which return `inactive` instead of\n * undefined\n * @param {WebRTCMediaEngine} target\n * @param {string} kind\n * @private\n * @returns {string}\n */\nfunction getTargetMediaDirection(target, kind) {\n  return targetMediaDirection.get(target, kind) || 'inactive';\n}\n\n/**\n * Interface for doing webrtc things\n * @protected\n */\nexport default class WebRTCMediaEngine {\n  /**\n   * Wrapper around navigator.mediaDevices.getUserMedia\n   *\n   * @param {MediaStreamContraints} constraints\n   * @returns {Promise<MediaStream>}\n   */\n  static getUserMedia(constraints) {\n    const finalConstraints = defaults({}, constraints, {fake: process.env.NODE_ENV === 'test'});\n    return navigator.mediaDevices.getUserMedia(finalConstraints);\n  }\n\n  logger = console\n\n  @evented\n  /**\n   * Represents the local party's outgoing stream. Instantiated when the class\n   * is instantiated.\n   * @type {MediaStream}\n   */\n  localMediaStream\n\n  @evented\n  /**\n   * Represent the remote party's incoming media. Instantiated when the class is\n   * instantiated.\n   * @type {MediaStream}\n   */\n  remoteMediaStream\n\n  @evented\n  /**\n   * Reserved for future use\n   * @type {MediaStream}\n   */\n  localSlideShare\n\n  /**\n   * Peer Connection\n   * @type {RTCPeerConnection}\n   */\n  pc = new RTCPeerConnection({iceServers: []});\n\n  @evented\n  /**\n   * The most-recently produced offer\n   * @private\n   */\n  offerSdp = '';\n\n  @evented\n  /**\n   * The most-recently accepted answer\n   * @private\n   */\n  answerSdp = '';\n\n  @evented\n  sendingAudio = false;\n\n  @evented\n  sendingVideo = false;\n\n  @evented\n  receivingAudio = false;\n\n  @evented\n  receivingVideo = false;\n\n  @evented\n  ended = false;\n\n  bandwidthLimit = {\n    audioBandwidthLimit: 60000,\n    videoBandwidthLimit: 1000000\n  };\n\n  /**\n   * Returns the current audio direction\n   * @returns {string}\n   */\n  get audioDirection() {\n    return getMediaDirectionFromTracks('audio', this.pc);\n  }\n\n  /**\n   * Returns the current video direction\n   * @returns {string}\n   */\n  get videoDirection() {\n    return getMediaDirectionFromTracks('video', this.pc);\n  }\n\n  /**\n   * Constructor\n   * @param {Object} attrs\n   * @param {Object} options\n   * @param {Logger} options.logger (optional): defaults to console\n   * @returns {WebRTCMediaEngine}\n   */\n  constructor(attrs = {}, options = {}) {\n    if (options.parent) {\n      // This is a bit of weirdness to maintain amp-state compatibility\n      process.nextTick(() => {\n        if (options.parent.logger) {\n          this.logger = options.parent.logger;\n        }\n      });\n    }\n    else if (attrs.logger) {\n      this.logger = attrs.logger;\n    }\n\n    this.pc.onnegotiationneeded = () => {\n      if (this.answerSdp) {\n        this.logger.info('peer connection emitted negotiationneeded');\n        this.triggerNegotiationNeeded();\n      }\n    };\n\n    // Note: adapter.js doesn't seem to fully shim the track event.\n    // addEventListener doesn't appear to work for it in chrome\n    this.pc.ontrack = (event) => {\n      this.trigger('track');\n      const stream = this.remoteMediaStream || new MediaStream();\n      event.streams[0]\n        .getTracks()\n        .forEach((track) => {\n          stream.addTrack(track);\n          track.onended = () => {\n            stream.removeTrack(track);\n            track.onended = undefined;\n            try {\n              this[`receiving${capitalize[track.kind]}`] = getMediaDirectionFromTracks(track.kind, this.pc).includes('recv');\n            }\n            catch (err) {\n              this[`receiving${capitalize[track.kind]}`] = false;\n            }\n          };\n\n          this[`receiving${capitalize[track.kind]}`] = getMediaDirectionFromTracks(track.kind, this.pc).includes('recv');\n        });\n      this.remoteMediaStream = stream;\n      this.trigger('internalTrackUpdate');\n    };\n  }\n\n  /* eslint-disable complexity */\n  /**\n   * Determines if ice gathering is necessary and sends it up when appropriate\n   * @private\n   * @returns {Promise|undefined}\n   */\n  _prepareIceGatherer() {\n    let needsIce = false;\n    if (this.pc.iceGatheringState === 'new') {\n      this.logger.info('ice gathering is in state \"new\", definitely need to block for ice gathering');\n      needsIce = true;\n    }\n    else {\n      const sdp = parse(this.pc.localDescription.sdp);\n      if (this.audioDirection !== 'inactive' || getTargetMediaDirection(this, 'audio') !== this.audioDirection && getTargetMediaDirection(this, 'audio') !== 'inactive') {\n        const audio = sdp.media.find((m) => m.type === 'audio');\n        if (audio) {\n          this.logger.info('audio candidates already gathered');\n        }\n        else {\n          this.logger.info('transition audio from inactive, ice needed');\n          needsIce = true;\n        }\n      }\n\n      if (this.videoDirection !== 'inactive' || getTargetMediaDirection(this, 'video') !== this.videoDirection && getTargetMediaDirection(this, 'video') !== 'inactive') {\n        const video = sdp.media.find((m) => m.type === 'video');\n        if (video) {\n          this.logger.info('video candidates already gathered');\n        }\n        else {\n          this.logger.info('transition video from inactive, ice needed');\n          needsIce = true;\n        }\n      }\n    }\n\n    let icePromise;\n    if (needsIce) {\n      icePromise = new Promise((resolve) => {\n        this.logger.info('configuring ice gathering');\n        this.pc.onicecandidate = (event) => {\n          if (!event.candidate) {\n            this.logger.info('ice gathering complete');\n            this.pc.onicecandidate = undefined;\n            resolve();\n            return;\n          }\n\n          this.logger.info('got ice candidate');\n        };\n      });\n    }\n\n    return icePromise;\n  }\n\n  /* eslint-enable complexity */\n\n  /**\n   * Creates an offer SDP\n   * @returns {Promise<string>}\n   */\n  createOffer() {\n    this.logger.info('beginning negotiation');\n\n    const td = getTargetMediaDirection(this, 'video');\n    const wantsVideo = td.includes('send') || td.includes('recv');\n\n    const icePromise = this._prepareIceGatherer();\n\n    return new Promise((resolve) => {\n      if (this.gumming) {\n        this.logger.info('gum in flight, waiting until it completes');\n        // Since gum is protected by @oneflight, returning it here will block\n        // until it completes but, more importantly, propagate a thrown\n        // exception up the stack\n        resolve(this._getUserMedia());\n        return;\n      }\n\n      resolve();\n    })\n      .then(tap(() => this.logger.info('creating offer', this.offerOptions)))\n      .then(() => {\n        // This is a (hopefully temporary) hack to deal with the fact that one\n        // out of two browsers removes the remote stream when offerToReceive* is\n        // false. We've already made the choice to disable the stream, but we\n        // want to make sure we're still willing to receive an answer for it.\n        this.offerOptions.offerToReceiveAudio = this.offerOptions.offerToReceiveAudio || !!this.pc.getReceivers().find((r) => r.track.kind === 'audio');\n        this.offerOptions.offerToReceiveVideo = this.offerOptions.offerToReceiveVideo || !!this.pc.getReceivers().find((r) => r.track.kind === 'video');\n        return this.pc.createOffer(this.offerOptions);\n      })\n      .then(tap((offer) => {\n        offer.sdp = limitBandwith(this.bandwidthLimit, offer.sdp);\n      }))\n      .then(tap(() => this.logger.info('setting local description')))\n      .then((offer) => this.pc.setLocalDescription(offer))\n      .then(tap(() => icePromise && this.logger.info('blocking for ice gathering')))\n      .then(() => icePromise)\n      .then(tap(() => this.logger.info('limiting bandwith')))\n      .then(() => limitBandwith(this.bandwidthLimit, this.pc.localDescription.sdp))\n      .then(tap(() => wantsVideo && this.logger.info('confirm h264 in offer')))\n      .then(ensureH264(wantsVideo))\n      .then(tap((sdp) => {\n        this.offerSdp = sdp;\n      }));\n  }\n\n  /**\n   * Receives an answer SDP\n   * @param {string} sdp\n   * @returns {Promise}\n   */\n  acceptAnswer(sdp) {\n    this.logger.info('accepting answer');\n    return this.pc.setRemoteDescription(new RTCSessionDescription({\n      sdp,\n      type: 'answer'\n    }))\n      .then(() => {\n        this.logger.info('answer accepted');\n        this.answerSdp = sdp;\n        this.sendingAudio = getMediaDirectionFromTracks('audio', this.pc).includes('send');\n        this.sendingVideo = getMediaDirectionFromTracks('video', this.pc).includes('send');\n        this.trigger('answeraccepted');\n      });\n  }\n\n  @nonenumerable\n  /**\n   * {@link MediaStreamConstraints} that'll be used for the next call to\n   * {@link WebRTCMediaEngine.getUserMedia()}\n   * @private\n   * @type {MediaStreamConstraints}\n   */\n  constraints = {};\n\n  @nonenumerable\n  /**\n   * {@link RTCOfferOptions} that'll be used for the next call to\n   * {@link RTCPeerConnection.createOffer}\n   * @private\n   * @type {RTCOfferOptions}\n   */\n  offerOptions = {};\n\n  @nonenumerable\n  @evented\n  /**\n   * Indicates whether or not a call to {@link MediaDevices#getUserMedia()} is\n   * in flight\n   * @private\n   * @type {boolean}\n   */\n  gumming = false\n\n  /**\n   * Change media direction without consumer provided tracks or complex\n   * constraints\n   * @param {string} kind\n   * @param {string} direction\n   * @private\n   * @returns {undefined}\n   */\n  _setNewMediaDirection(kind, direction) {\n    this.logger.info(`setting ${kind} direction to ${direction}`);\n    const constraint = direction.includes('send');\n    this.constraints[kind] = constraint;\n\n    if (constraint) {\n      if (!this[`${kind}Direction`].includes('send')) {\n        this._setNewMediaConstraint(kind, constraint);\n      }\n    }\n    else {\n      this.logger.info(`removing any no-longer-needed ${kind} tracks`);\n      if (!this.localMediaStream) {\n        return;\n      }\n      this.localMediaStream\n        .getTracks()\n        .filter((t) => t.kind === kind)\n        .forEach((t) => {\n          this.logger.info(`removing ${kind} track ${t.id} from localMediaStream`);\n          this.localMediaStream.removeTrack(t);\n          this.logger.info(`removing ${kind} track ${t.id} from peer connection`);\n          // Note: Doesn't like removing senders whose tracks are not live, so\n          // t.stop() has to come after removeTrack()\n          try {\n            this.pc.removeTrack(this.pc.getSenders().find((s) => s.track === t));\n          }\n          catch (err) {\n            if (t.readyState === 'ended') {\n              this.logger.warn('Suppressing error caused by trying to remove an ended track from a peer connection');\n            }\n            else {\n              this.logger.warn('suppressing removeTrack error. We don\\'t know why firefox does this, but we\\'re still going to make sure the track is stopped');\n            }\n            this.logger.warn(err);\n          }\n          this.logger.info(`setting receiving${capitalize[kind]} to false`);\n          this[`sending${capitalize[kind]}`] = false;\n          this.logger.info(`stopping ${kind} track ${t.id}`);\n          t.stop();\n        });\n    }\n  }\n\n  /**\n   * Sets or replaces current track for $kind\n   * @param {string} kind\n   * @param {MediaStreamTrack} track\n   * @returns {undefined}\n   */\n  _setNewMediaTrack(kind, track) {\n    this.logger.info(`setting new ${kind} track`);\n    this.constraints[kind] = false;\n    this.addOrReplaceTrack(track);\n  }\n\n  /**\n   * Causes track for ${kind} to be set or replaced according to $constraint\n   * @param {string} kind\n   * @param {Object|boolean} constraint\n   * @returns {undefined}\n   */\n  _setNewMediaConstraint(kind, constraint) {\n    this.logger.info(`setting ${kind} with new constraint`);\n    this.constraints[kind] = constraint;\n    this._getUserMedia();\n  }\n\n  // I don't see any further ways to reduce complexity without hurting\n  // readability\n  /* eslint-disable complexity */\n  /**\n   * Sets a media direction for a given media type. Almost certainly triggers\n   * renegotiation. This is the method to use if you want to replace a track.\n   * @param {string} kind audio|video\n   * @param {string} direction sendonly|recvonly|sendrecv|inactive\n   * @param {MediaStreamTrack|Object} trackOrConstraint\n   * @returns {Promise}\n   */\n  setMedia(kind, direction, trackOrConstraint) {\n    if (trackOrConstraint) {\n      if (!direction.includes('send')) {\n        throw new Error(`Cannot set new ${kind} track or constraint if direction does not include send`);\n      }\n\n      if (trackOrConstraint instanceof MediaStreamTrack) {\n        if (trackOrConstraint.kind !== kind) {\n          throw new Error(`track is not a valid ${kind} media stream track`);\n        }\n\n        this._setNewMediaTrack(kind, trackOrConstraint);\n      }\n      else {\n        this._setNewMediaConstraint(kind, trackOrConstraint);\n      }\n    }\n    else {\n      if (direction === getTargetMediaDirection(this, kind)) {\n        this.logger.info(`${kind} already transitioning to ${direction}, not making changes`);\n        return;\n      }\n\n      if (direction === this[`${kind}Direction`]) {\n        this.logger.info(`${kind} already set to ${direction}, not making changes`);\n        return;\n      }\n      this._setNewMediaDirection(kind, direction);\n    }\n\n    const shouldRecv = direction.includes('recv');\n\n    targetMediaDirection.set(this, kind, direction);\n\n    this.offerOptions[`offerToReceive${kindToPropertyFragment(kind)}`] = shouldRecv;\n\n    if (shouldRecv) {\n      if (this.remoteMediaStream && this.remoteMediaStream.getTracks().find((t) => t.kind === kind)) {\n        this.unpauseReceivingMedia(kind);\n      }\n      else if (this.answerSdp) {\n        this.triggerNegotiationNeeded();\n      }\n    }\n    else if (this.remoteMediaStream && this.remoteMediaStream.getTracks().find((t) => t.kind === kind)) {\n      this.pauseReceivingMedia(kind);\n    }\n  }\n\n  /* eslint-enable complexity */\n\n  @whileInFlight('gumming')\n  @oneFlight\n  /**\n   * Wrapper around {@link MediaDevices#getUserMedia()} that delays the call one\n   * tick to reduce the number of permissions dialogs presented to the user.\n   * @name _getUserMedia\n   * @returns {Promise<MediaStream>}\n   */\n  // It's not missing, but the decorator is throwing off eslint\n  // eslint-disable-next-line require-jsdoc\n  _getUserMedia() {\n    this.logger.info('enqueing request to get user media');\n    return new Promise((resolve) => process.nextTick(resolve))\n      .then(() => {\n        if (this.constraints.audio === true && this.pc.getSenders().find((s) => s.track.kind === 'audio')) {\n          this.logger.info('already have a local audio track, removing constraint for a second one');\n          Reflect.deleteProperty(this.constraints, 'audio');\n        }\n\n        if (this.constraints.video === true && this.pc.getSenders().find((s) => s.track.kind === 'video')) {\n          this.logger.info('already have a local video track, removing constraint for a second one');\n          Reflect.deleteProperty(this.constraints, 'video');\n        }\n\n        return WebRTCMediaEngine.getUserMedia(this.constraints);\n      })\n      .then((stream) => {\n        this.logger.info(`got local media stream with ${stream.getAudioTracks().length} audio tracks and ${stream.getVideoTracks().length} video tracks`);\n        stream.getTracks().forEach((t) => this.addOrReplaceTrack(t));\n        this.constraints = {};\n      })\n      .catch((err) => {\n        this.trigger('error', err);\n        return Promise.reject(err);\n      });\n  }\n\n  /**\n   * adds or replaces a local @{link MediaStreamTrack}\n   * @private\n   * @param {MediaStreamTrack} track\n   * @returns {undefined}\n   */\n  addOrReplaceTrack(track) {\n    if (!this.localMediaStream) {\n      this.localMediaStream = new MediaStream();\n    }\n    this.logger.info(`preparing to add ${track.kind} to local media stream`);\n    const existing = this.pc.getSenders().find((s) => s.track.kind === track.kind && s.track !== track);\n    if (existing) {\n      this.logger.info(`removing previous ${track.kind} from local media stream`);\n      this.pc.removeTrack(existing);\n      this.localMediaStream.removeTrack(existing.track);\n      // it may not be appropriate to stop the track if it was supplied by the\n      // engine consumer, but I'm inclined not to deal with that unless it\n      // becomes a real issue.\n      track.stop();\n    }\n\n    this.logger.info(`adding ${track.kind} to local media stream`);\n    this.localMediaStream.addTrack(track);\n    this.logger.info(`adding ${track.kind} to peer connection`);\n    this.pc.addTrack(track, this.localMediaStream);\n\n    this.logger.info(`setting sending${capitalize[track.kind]} to true`);\n    this[`sending${capitalize[track.kind]}`] = true;\n  }\n\n  /**\n   * Stops sending useful bits on the identified track, but does not end it (the\n   * camera/mic will stay on but the remote party(s) will not see/hear anything).\n   * Avoids renegotiation. Throws if `kind` does not identify a track.\n   * @param {string} kind\n   * @returns {Promise}\n   */\n  pauseSendingMedia(kind) {\n    if (!kind) {\n      throw new Error('kind is required');\n    }\n    const senders = this.pc\n      .getSenders()\n      .filter((s) => s.track.kind === kind);\n\n    if (senders.length === 0) {\n      throw new Error(`No ${kind} media senders to pause`);\n    }\n\n    senders.forEach((s) => {\n      this.logger.info(`pausing ${kind} sender`);\n      s.track.enabled = false;\n    });\n\n    this.logger.info(`setting sending${capitalize[kind]} to false`);\n    this[`sending${capitalize[kind]}`] = false;\n  }\n\n  /**\n   * Resumes sending bits on the identified track. Throws if `kind` does not\n   * identify a track.\n   * @param {string} kind\n   * @returns {Promise}\n   */\n  unpauseSendingMedia(kind) {\n    if (!kind) {\n      throw new Error('kind is required');\n    }\n    const senders = this.pc\n      .getSenders()\n      .filter((s) => s.track.kind === kind);\n\n    if (senders.length === 0) {\n      throw new Error(`No ${kind} media senders to unpause`);\n    }\n\n    senders.forEach((s) => {\n      this.logger.info(`unpausing ${kind} sender`);\n      s.track.enabled = true;\n    });\n\n    this.logger.info(`setting sending${capitalize[kind]} to true`);\n    this[`sending${capitalize[kind]}`] = true;\n  }\n\n  /**\n   * Convenience function. Sets a remote track.enabled=false. Does not\n   * renegotiate.Throws if `kind` does not identify a track.\n   * @param {string} kind\n   * @returns {Promise}\n   */\n  pauseReceivingMedia(kind) {\n    if (!kind) {\n      throw new Error('kind is required');\n    }\n    if (!this.remoteMediaStream) {\n      throw new Error('No remote media stream available');\n    }\n    const tracks = this.remoteMediaStream\n      .getTracks()\n      .filter((t) => t.kind === kind);\n\n    if (tracks.length === 0) {\n      throw new Error(`No remote ${kind} media tracks to pause`);\n    }\n\n\n    tracks.forEach((t) => {\n      this.logger.info(`pausing remote ${kind} track`);\n      t.enabled = false;\n    });\n\n    this.logger.info(`setting receiving${capitalize[kind]} to false`);\n    this[`receiving${capitalize[kind]}`] = false;\n  }\n\n  /**\n   * Convenience function. Sets a remote track.enabled=true. Does not\n   * renegotiate.Throws if `kind` does not identify a track.\n   * @param {string} kind\n   * @returns {Promise}\n   */\n  unpauseReceivingMedia(kind) {\n    if (!kind) {\n      throw new Error('kind is required');\n    }\n    if (!this.remoteMediaStream) {\n      throw new Error('No remote media stream available');\n    }\n    const tracks = this.remoteMediaStream\n      .getTracks()\n      .filter((t) => t.kind === kind);\n\n    if (tracks.length === 0) {\n      throw new Error(`No remote ${kind} media tracks to pause`);\n    }\n\n    tracks.forEach((t) => {\n      this.logger.info(`unpausing remote ${kind} track`);\n      t.enabled = true;\n    });\n\n    this.logger.info(`setting receiving${capitalize[kind]} to true from ${this[`receiving${capitalize[kind]}`]}`);\n    this[`receiving${capitalize[kind]}`] = true;\n  }\n\n  /**\n   * Stops all tracks and streams, closes the peer connection, and removes all\n   * listeners\n   * @returns {undefined}\n   */\n  stop() {\n    if (this.pc.signalingState !== 'closed') {\n      this.pc.getSenders().forEach((s) => s.track.stop());\n      this.pc.close();\n    }\n\n    this.pc.onnegotiationneeded = undefined;\n    this.pc.ontrack = undefined;\n    this.pc.onicecandidate = undefined;\n    this.ended = true;\n    this.off();\n  }\n\n  @debounce(500)\n  /**\n   * Debounced helper for triggering `negotiationneeded`.\n   * @private\n   * @returns {undefined}\n   */\n  // It's not missing, but the decorator is throwing off eslint\n  // eslint-disable-next-line require-jsdoc\n  triggerNegotiationNeeded() {\n    this.trigger('negotiationneeded');\n  }\n\n  /**\n   * Returns a string when attempting to serialize object\n   * @returns {string}\n   */\n  serialize() {\n    return 'WebRTCMediaEngine';\n  }\n}\n\nObject.assign(WebRTCMediaEngine.prototype, Events);\n"]}